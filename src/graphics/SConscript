import os

output    = "libilgraphics"
src_dir   = "#src/graphics"
build_dir = "#build"
inputs    = "*.c api/*.c gui/*.c"

Import("platform")
Import("env")
Import("libilutil")
Import("libilmath")
Import("libilcommon")
Import("libilasset")
Import("libilinput")

graphics = env.Clone()

graphics.Append(CFLAGS="-DIL_IN_GRAPHICS", CPPPATH = src_dir, LIBS=["ilcommon","ilutil","ilmath","ilasset","ilinput"])

pkg_libs = {
    "osx":   ["glfw3", "glew", "harfbuzz", "cairo", "harfbuzz-icu", "freetype2"],
    "arch":  ["glfw3", "glew", "gl", "harfbuzz", "harfbuzz-icu", "cairo", "freetype2"],
    "linux": ["gl", "glfw3", "glew", "harfbuzz", "cairo", "freetype2"],
    "mingw": ["freetype2"]
}

if platform=="mingw":
    graphics.Append(LIBS=["opengl32", "glew32", "glfw3", "png", "z", "harfbuzz", "harfbuzz-icu", "cairo"])

for lib in pkg_libs[platform]:
    graphics.ParseConfig("pkg-config " + lib + " --cflags --libs")

#graphics.ParseConfig("freetype-config --cflags --libs")

sources = []
for module in Split(inputs) :
    sources.extend(Glob(module))

libilgraphics = graphics.SharedLibrary(target = build_dir + "/" + output,
                                       source = sources)
Depends(libilgraphics, libilutil)
Depends(libilgraphics, libilmath)
Depends(libilgraphics, libilcommon)
Depends(libilgraphics, libilasset)
Depends(libilgraphics, libilinput)

Return("libilgraphics")

